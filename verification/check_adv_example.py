# -*- coding: utf-8 -*-
# created by makise, 2022/4/11

import json

import numpy as np
import torch
from matplotlib import pyplot as plt

import onnxruntime

from verification.show_adv_example import read_result_file, get_adv_examples

result_file_dir = '/home/GuoXingWu/occlusion_veri/PyTorchLearn/experiment/results/thought_4/pe_20220411_124353/'
result_filename = 'fnn_model_gtsrb_small.onnx_batchNum_1_occlusionSize_13_13_occlusionColor_0.5_outputDim_7_blockSize_32_32.json'
onnx_model_file = '/home/GuoXingWu/occlusion_veri/PyTorchLearn/model/fnn_model_gtsrb_small.onnx'


def is_real_adv_example(result_filepath, onnx_model_filepath) -> bool:
    """
    :param result_filepath: a json file generated by verification containing adv example if unroubts
    :param onnx_model_filepath: onnx model filepath
    :return: whether the adv example provided by verification is a real one
    """
    result = read_result_file(result_filepath)
    adv_examples = get_adv_examples(result)
    adv_image = np.array(adv_examples[0]['adv_example'], dtype=np.float32)
    adv_image = np.reshape(adv_image, (1, 3, 32, 32))
    origin_image = np.array(adv_examples[0]['origin_image'], dtype=np.float32)
    print(adv_image.shape)
    print(origin_image.shape)
    if predict(adv_image, onnx_model_filepath) != predict(origin_image, onnx_model_filepath):
        return True
    else:
        return False


def predict(image, onnx_model_path):
    """
    :param image: image to predict, size 1, 3, 32, 32
    :return:
    """
    ort_session = onnxruntime.InferenceSession(onnx_model_path)
    # create the input tensor
    input_name = ort_session.get_inputs()[0].name
    # run the model
    output_tensor = ort_session.run(None, {input_name: image})  # the torch_out is 1 * batch_size * output_dim
    output_tensor = torch.tensor(output_tensor[0])
    _, predicted = torch.max(output_tensor, 1)
    return predicted


if __name__ == '__main__':
    result_filepath = result_file_dir + result_filename
    onnx_model_filepath = onnx_model_file
    print("Is real adv example: ", is_real_adv_example(result_filepath, onnx_model_filepath))

